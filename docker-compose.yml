version: '3.8'

services:
  database:
    image: postgres:17-trixie
    environment:
      POSTGRES_DB: timeline
      POSTGRES_USER: timeline_user
      POSTGRES_PASSWORD: timeline_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - timeline_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      DATABASE_URL: postgresql://timeline_user:timeline_password@database:5432/timeline
      RUST_LOG: info
      # Domain Configuration
      # Set to "localhost" for local development/testing (allows localhost and 127.0.0.1)
      # Set to your domain(s) for production (e.g., "timeline.example.com" or "192.168.1.100,timeline.local")
      # This enforces both CORS and domain access restrictions
      # Only requests from specified domains will be accepted
      DOMAIN: localhost
      # TLS Enforcement
      # Set to "true" to require TLS connections
      # Set to "false" to allow HTTP (for development only)
      REQUIRE_TLS: "true"
      # Self-Signed SSL Certificate
      # Set to "true" to use automatically generated self-signed SSL certificate (HTTPS on port 8443, HTTP redirects from port 8080)
      # Set to "false" if using external reverse proxy with valid SSL certificate
      USE_SELF_SIGNED_SSL: "true"
    depends_on:
      - database
    networks:
      - timeline_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  timeline_network:
    driver: bridge
