version: '3.8'

services:
  database:
    image: postgres:17-trixie
    environment:
      POSTGRES_DB: timeline
      POSTGRES_USER: timeline_user
      POSTGRES_PASSWORD: timeline_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - timeline_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - .:/app/host:rw
    environment:
      DATABASE_URL: postgresql://timeline_user:timeline_password@database:5432/timeline
      RUST_LOG: info
      # Domain Configuration
      # Comma-separated list of allowed domains (without ports)
      # Examples: "localhost", "192.168.1.10,example.com", "10.2.0.5"
      # Each domain will be accessible via both HTTP (8080) and HTTPS (8443)
      # Requests from unlisted domains will be blocked with 403 Forbidden
      DOMAIN: localhost
      # TLS Enforcement
      # When "true": Requires TLS for all connections (either via reverse proxy or direct)
      # When "false": Allows both HTTP and HTTPS connections
      # Applies to both port 8080 (checks X-Forwarded-Proto header) and 8443 (direct TLS)
      REQUIRE_TLS: "true"
      # Self-Signed SSL Certificate
      # When "true": Application generates and uses self-signed TLS certificates on port 8443
      # When "false": Port 8443 is not opened (expects reverse proxy for HTTPS)
      # Note: When both REQUIRE_TLS and USE_SELF_SIGNED_SSL are "true",
      #       HTTP requests on port 8080 will auto-redirect to HTTPS on port 8443
      USE_SELF_SIGNED_SSL: "true"
    depends_on:
      - database
    networks:
      - timeline_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  timeline_network:
    driver: bridge
